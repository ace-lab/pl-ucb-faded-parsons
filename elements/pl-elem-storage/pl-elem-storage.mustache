<input type="hidden" id="elmstr-input-{{uuid}}"
       name="{{name}}" value="{{current_file_contents}}"/>
<script>
    window.PlElemStorage ||= {
        stores: {},
        _registerStore: function(uuid) {
            if (uuid in this.stores) throw new Error(`A store already exists for uuid` + uuid);
            const query = $('#elmstr-input-' + uuid);
            this.stores[uuid] = contents => {
            if (contents == null) return atob(query.val());
            query.val(
                btoa(he.encode(contents, { allowUnsafeSymbols: true, useNamedReferences: true }))
            );
            }
            return this.stores[uuid];
        },
        getStore: function(uuid) {
            if (uuid in this.stores) return this.stores[uuid];
            throw new Error(`No pl-elem-storage is regestered to uuid: ${uuid}`);
        },
        getVal: function(uuid) {
            return this.getStore(uuid)()
        },
        setVal: function(uuid, contents) {
            return this.getStore(uuid)(contents);
        }
    };

    PlElemStorage._registerStore('{{uuid}}');
</script>

<!-- Example Usage in my-custom-element.mustache:
{{! Create an element data store: }}
<pl-elem-storage filename="my-custom-element-storage" uuid="{{uuid}}">
</pl-elem-storage>
{{! The uuid is critical to retrieve the right instance of this element.
    When my-custom-element.mustache is rendered with chevron, be sure to
    pass "uuid: pl.get_uuid()" as one of the rendering params.
    This will create a uuid for each instance of the element rendering
    (eg for displaying a submission or offering a problem).
}}

<textarea id="element-{{uuid}}-data-editor">
</textarea>

<script>
    $(function() {
        // retrieve the registered store
        const store = PlElemStorage.getStore('{{uuid}}');

        // populate the container box with the old data
        const editor = $('#element-{{uuid}}-data-editor');
        editor.val(store());

        // set a listener for edits in the box
        editor.on('input', function() { store(editor.val()); });
    });
</script>
-->