{{! TBD: throughout, we should use answers_name to avoid ID collisions, but this also requires modifying pl-faded-parsons.js to keep multiple widget instances separate, etc }}

{{! <script src="https://www.gstatic.com/firebasejs/9.0.2/firebase-app.js"></script> }}
{{! <script src="https://www.gstatic.com/firebasejs/9.0.2/firebase-firestore.js"></script> }}

<script type="module">
    // Import the functions you need from the SDKs you need
    import * as Fb from "https://www.gstatic.com/firebasejs/9.0.2/firebase-app.js";
    import * as Firestore from "https://www.gstatic.com/firebasejs/9.0.2/firebase-firestore.js";

    // Add SDKs for Firebase products that you want to use here:
    // https://firebase.google.com/docs/web/setup#available-libraries

    // Your web app's Firebase configuration
    // For Firebase JS SDK v7.20.0 and later, measurementId is optional
    const firebaseConfig = {
      apiKey: "AIzaSyD3RdPsfO50vjyFKD6wYseNvdaQZFRslZg",
      authDomain: "faded-parsons-logging.firebaseapp.com",
      projectId: "faded-parsons-logging",
      storageBucket: "faded-parsons-logging.appspot.com",
      messagingSenderId: "591608062092",
      appId: "1:591608062092:web:4b4e4963e6026136119ba9",
      measurementId: "G-NCF4CRWMHG"
    };

    // Initialize Firebase
    const Firebase = Object.create(Fb);
    Firebase.Firestore = Firestore;
    Firebase.app = Firebase.initializeApp(firebaseConfig);
    Firebase.app.db = Firebase.Firestore.getFirestore(Firebase.app);
    window['Firebase'] = Firebase;
</script>

{{! hidden form field that will be filled with student response right before submit; we have to capture the state of both the 'starter code' box and the 'solution' box}}

<input id="{{answers_name}}student-parsons-solution" name="{{answers-name}}student-parsons-solution" type="hidden" value=""/>

{{! form field to be filled with order to save the current submission }}
<input id="{{answers_name}}starter-code-order" name="{{answers-name}}starter-code-order" type="hidden" value=""/>
<input id="{{answers_name}}parsons-solution-order" name="{{answers-name}}parsons-solution-order" type="hidden" value=""/>

{{! hidden form field populated with initial code; no 'name' attrib so won't be submitted }}

<input id="{{answers_name}}code-lines" type="hidden" value="{{{code_lines}}}"/>

{{! the side by side boxes, starter code on left, solution area on right }}
<div class="pl-faded-parsons row">
  <div id="{{answers_name}}starter-code"     class="col-sm-6 border px-1 sortable-code"></div>
  <div id="{{answers_name}}parsons-solution" class="col-sm-6 border sortable-code"></div>
</div>

<script>
  function allBlanksFilled(e){
    var solutionInputs = $("#ul-parsons-solution li input");
    all_filled = true;
    for (const input of solutionInputs){
      if (input.value == null || input.value == "") all_filled = false;
    }
    if (!all_filled){
      if (!window.confirm("You have an unfilled blank in your solution. Are you sure you want to submit?")){
        e.preventDefault();
        location.reload();
        return false;
      }
    }
    return true;
  }
  //not sure why it defaults to disabling
  //console.log($('.disable-on-submit'))
  //$('.disable-on-submit').removeClass('disabled-on-submit');

  // validate if all blanks filled in
  $('form.question-form').submit(function (e) {
    allBlanksFilled(e)
  });

  var populateCheck = setInterval(function() {
    {{#populate_info}}
    var exists = document.forms['question-form']['{{name}}'];
    if (exists) {
      clearInterval(populateCheck);
      document.forms['question-form']['{{name}}'].value = '{{value}}'
    }
    {{/populate_info}}
  }, 25);

  var studentOrderCheck = setInterval(function() {
    var exists = $("#ul-starter-code").length;
    if (exists) {
      clearInterval(studentOrderCheck);
      var starterCode = document.getElementById('ul-starter-code')
      {{#student_order_info}}
      document.getElementById('{{id}}').style.marginLeft = '{{indent}}'
      starterCode.appendChild(document.getElementById('{{id}}'))
      {{/student_order_info}}
    }
  }, 25);

  var solutionOrderCheck = setInterval(function() {
    var exists = $("#ul-parsons-solution").length;
    if (exists) {
      clearInterval(solutionOrderCheck);
      var solutionCode = document.getElementById('ul-parsons-solution')
      {{#solution_order_info}}
      document.getElementById('{{id}}').style.marginLeft = '{{indent}}'
      solutionCode.appendChild(document.getElementById('{{id}}'))
      {{/solution_order_info}}
    }
  }, 25);

</script>